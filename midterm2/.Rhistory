load("SummerOlympics2012Ctry.rda")
head(SO2012Ctry)
mean.GDP=mean(So2012Ctry$GDp)
mean.GDP=mean(So2012Ctry$GDP)
mean.GDP=mean(SO2012Ctry$GDP)
max.GDP=max(SO2012Ctry$GDP)
names(SO2012Ctry)
female.prop=SO2012Ctry$Famale/(SO2012Ctry$Female+So2012Ctry$Male)
female.prop=SO2012Ctry$Famale/(SO2012Ctry$Female+SO2012Ctry$Male)
female.prop=SO2012Ctry$Female/(SO2012Ctry$Female+SO2012Ctry$Male)
subset.nobronze=SO2012Ctry[So2012Ctry$Bronze==0,]
subset.nobronze=SO2012Ctry[SO2012Ctry$Bronze==0,]
View(subset.nobronze)
View(subset.nobronze)
subset.threebrone=SO2012Ctry[SO2012Ctry$Bronze>=3,]
subset.threebrone=SO2012Ctry[SO2012Ctry$Bronze>=3,Silver]
subset.threebrone=SO2012Ctry[SO2012Ctry$Bronze>=3,Bronze]
subset.threebrone=SO2012Ctry[SO2012Ctry$Bronze>=3,"Bronze"]
View(subset.nobronze)
subset.threebrone=SO2012Ctry[SO2012Ctry$Bronze>=3,]
subset.nobronze.pop=subset.nobronze$pop
load("C:/Users/Zirui/Downloads/Cache500.rda")
x=c()
for (i in 1:1000)
x[i]=i*6
x=c()
for (i in 1:1000)
x[i]=i*6
interger(1)
inter(1)
int(1)
?int
??int
1//10
1/10
1%10
1%%10
3%%10
y=x%%10==0
y=x%%10==0
for (i in 1001:2000)
y[i]=F
?sample
rep(3,3)
rep(1:13,3)
w=sample(rep(1:13,4),42)
w
set.seed(2718)
#w <- <your code here>
w=sample(rep(1:13,4),42)
w
m=matrix(ncol=10,nrow=10)
m
?rexp
rexp(10,1)
m=matrix(rexp(100,rate=3),ncol=10,nrow=10)
m
set.seed(344)
#m <- <your code here>
m=matrix(rexp(100,rate=3),ncol=10,nrow=10)
set.seed(71)
list(1,2)
?rpois
rpois(100,0.2)
rpois(100,0.2)
rpois(100,0.2)
rpois(100,5)
rpois(100,0.2)
l=list(rep(rpois(100,0.2)),10)
l
l=list(rep(rpois(100,0.2),10))
l
l=list(rpois(100,0.2),rpois(100,0.2),rpois(100,0.2),rpois(100,0.2),rpois(100,0.2),rpois(100,0.2),rpois(100,0.2),rpois(100,0.2),rpois(100,0.2),rpois(100,0.2))
l
setwd("C:/Users/Zirui/src/stat133/midterm2")
load("KaiserBabies.rda")
load("KaiserBabies.rda")
names(infants)
View(infants)
?table
marriedfirst=infants[infants$marital="Married"&infants$parity==1,]
marriedfirst=infants[infants$marital=="Married"&infants$parity==1,]
View(marriedfirst)
t=table(marriedfirst$ed)
t
mw=infants[infants$gestation>=259,]
mw
View(mw)
mw=infants[infants$gestation>=259,]
View(mw)
View(infants)
mw=mean(infants[infants$gestation>=259,]$bwt)
mw
infants[infants$gestation>=259,]$bwt
?mean
mw=mean(infants[infants$gestation>=259,]$bwt,na.rm=False)
mw=mean(infants[infants$gestation>=259,]$bwt,na.rm=F)
mw=mean(infants[infants$gestation>=259,]$bwt,na.rm=T)
T
mw
load("family.rda")
View(family)
names(family)
f=family[family$gender=="f"&family$age>50,]
f
fm=f=family[family$gender=="m"&family$height>=72,]
fm
View(f)
View(family)
f3=family[family$name[1]="T",]
f3=family[family$name[1]=="T",]
f3
family$name
family$name[1]
family$name[1][1]
family$name[1][1]
name=as.character(family$name)
name
name[1]
name[1][1]
name[[1]]
f3=family[family$name=="Tom"|family$name=="Tim",]
f3
f4=family[family$age==min(family$age),]
f4
iris
names(iris)
boxplot(Sepal.Length)
boxplot(iris$Sepal.Length)
boxplot
?boxplot()
boxplot(iris$Sepal.Length[1:50],iris$Sepal.Length[51:100],iris$Sepal.Length[101:150])
?plot()
plot(iris$Petal.Length[1:50],iris$Petal.Width[1:50],"p")
plot(iris$Petal.Length[1:50],iris$Petal.Width[1:50],"p",col="red")
?point
?point
x=c()
for (i in 1:2000)
x[i]=i*6
# [1 pt]
# Create [y], a logical vector of length 2000
# with y[i]=T if x[i] is divisible by 10, otherwise F
# y <- <your code here>
y=x%%10==0
plot(iris$Petal.Length[1:50],iris$Petal.Width[1:50],"p",col="red",xlab="Petal Length",ylab="Petal Width")
?abline
?points
plot(iris$Petal.Length[1:50],iris$Petal.Width[1:50],"p",col="red",xlab="Petal Length",ylab="Petal Width")
points(iris$Petal.Length[51:100],iris$Petal.Width[51:100])
points(iris$Petal.Length[101:150],iris$Petal.Width[101:150])
plot(iris$Petal.Length[1:50],iris$Petal.Width[1:50],"p",col="red",xlab="Petal Length",ylab="Petal Width")
points(iris$Petal.Length[51:100],iris$Petal.Width[51:100])
points(iris$Petal.Length[101:150],iris$Petal.Width[101:150])
iris
plot(iris$Petal.Length[1:50],iris$Petal.Width[1:50],"p",xlim=c(0,7),ylim=c(0,2.5),col="red",xlab="Petal Length",ylab="Petal Width")
points(iris$Petal.Length[51:100],iris$Petal.Width[51:100])
points(iris$Petal.Length[101:150],iris$Petal.Width[101:150])
points(iris$Petal.Length[51:100],iris$Petal.Width[51:100],col="blue")
points(iris$Petal.Length[101:150],iris$Petal.Width[101:150].col="yellow")
points(iris$Petal.Length[101:150],iris$Petal.Width[101:150],col="yellow")
plot(iris$Petal.Length[1:50],iris$Petal.Width[1:50],"p",xlim=c(0,7),ylim=c(0,2.5),col="red",xlab="Petal Length",ylab="Petal Width")
points(iris$Petal.Length[51:100],iris$Petal.Width[51:100],col="blue")
points(iris$Petal.Length[101:150],iris$Petal.Width[101:150],col="yellow")
plot(1:150,iris$Sepal.Length/iris$Petal.Length)
plot(1:50,iris$Sepal.Length/iris$Petal.Length,col"red")
plot(1:50,iris$Sepal.Length/iris$Petal.Length,col="red")
plot(1:50,iris$Sepal.Length[1:50]/iris$Petal.Length[1:50],col="red")
plot(1:50,iris$Sepal.Length[1:50]/iris$Petal.Length[1:50],xlim=c(1,150)col="red")
plot(1:50,iris$Sepal.Length[1:50]/iris$Petal.Length[1:50],xlim=c(1,150),col="red")
points(51:100,iris$Sepal.Length[51:100]/iris$Petal.Length[51:100],col="blue")
plot(1:50,iris$Sepal.Length[1:50]/iris$Petal.Length[1:50],xlim=c(1,150),col="red")
points(51:100,iris$Sepal.Length[51:100]/iris$Petal.Length[51:100],col="blue")
points(51:100,iris$Sepal.Length[51:100]/iris$Petal.Length[51:100],col="blue")
points(101:150,iris$Sepal.Length[101:150]/iris$Petal.Length[101:150],col="yellow")
plot(1,2,3,4,5,6)
plot(x,x)
points(51:100,iris$Sepal.Length[51:100]/iris$Petal.Length[51:100],col="blue")
points(101:150,iris$Sepal.Length[101:150]/iris$Petal.Length[101:150],col="yellow")
points(iris$Petal.Length[51:100],iris$Petal.Width[51:100],col="blue")
points(iris$Petal.Length[101:150],iris$Petal.Width[101:150],col="yellow")
plot(iris$Petal.Length[1:50],iris$Petal.Width[1:50],"p",xlim=c(0,7),ylim=c(0,2.5),col="red",xlab="Petal Length",ylab="Petal Width")
points(iris$Petal.Length[51:100],iris$Petal.Width[51:100],col="blue")
points(iris$Petal.Length[101:150],iris$Petal.Width[101:150],col="yellow")
points(51:100,iris$Sepal.Length[51:100]/iris$Petal.Length[51:100],col="blue")
points(101:150,iris$Sepal.Length[101:150]/iris$Petal.Length[101:150],col="yellow")
plot(1:50,iris$Sepal.Length[1:50]/iris$Petal.Length[1:50],xlim=c(1,150),col="red")
points(51:100,iris$Sepal.Length[51:100]/iris$Petal.Length[51:100],col="blue")
points(101:150,iris$Sepal.Length[101:150]/iris$Petal.Length[101:150],col="yellow")
load("Cache500.rda")
?sapply
first.cache=sapply(Cache500,[1])
first.cache=sapply(Cache500,mean)
first.cache
mean.cache=sapply(Cache500,mean)
mean.cache
mean.cache=sapply(Cache500,mean(na.rm=T))
mean.cache=sapply(Cache500,mean,na.rm=T)
mean.cache
mean.cache=sapply(Cache500,mean)
first.cache=sapply(Cache500[1])
sd.cache=sapply(Cache500,sd)
sd.cache
Cache500[1]
length(Cache500[1])
length(Cache500[[1]])
mean.long.cache=c()
for (i in 1:500)
{
if (length(Cache500[[i]]>=50))
mean.long.cache=mean(Cache500[[i]])
else
mean.long.cache=NA
}
mean.long.cache
mean.long.cache=c()
for (i in 1:500)
{
if (length(Cache500[[i]]>=50))
mean.long.cache[i]=mean(Cache500[[i]])
else
mean.long.cache[i]=NA
}
mean.long.cache
mean.cache=sapply(Cache500,mean)
sd.cache=sapply(Cache500,sd)
first.cache=sapply(Cache500,head)
first.cache
?head
first.cache=sapply(Cache500,head,n=1)
first
first.cache
first.cache=as.vector(sapply(Cache500,head,n=1))
first.cache
first.cache=as.vector(sapply(Cache500,head,n=1))
plot(1:150,iris$Sepal.Length[1:150]/iris$Petal.Length[1:150],xlim=c(1,150),col="red")
points(51:100,iris$Sepal.Length[51:100]/iris$Petal.Length[51:100],col="blue")
points(101:150,iris$Sepal.Length[101:150]/iris$Petal.Length[101:150],col="yellow")
first.cache=as.vector(sapply(Cache500,head,n=1))
a=lkist(1,2,3)
a=list(1,2,3)
a
as.vector(a)
?as.vector
is.vecor(a)
is.vector(a)
