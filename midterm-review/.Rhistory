load("C:/Users/Zirui/src/stat133/assignments/hw5/hw5data.RData")
sample1=bml.sim(500,500,0.4)
image(sample1[[2]],col=c("white","red","blue"))
sample2=bml.sim(500,500,0.6)
y=seq(2,200,by=2)
y
z=paste("hw",1:20)
z
z=paste("hw",1:20,sep="a")
z
z=paste("hw",1:20,sep="")
z
m=rnorm(100)
mean.m=mean(m)
sd.m=sd(m)
max.m=max(m)
setwd("C:/Users/Zirui/src/stat133/assignments/hw1")
load(family.rda)
load("family.rda")
class(family)
family
family.men=family[family$gender=="m",]
family.men
family.men=family[family$gender=="m",c(name,gender,age)]
family.men=family[family$gender=="m",c("name","gender","age")]
family.men
family.men=family[family$gender=="m",]
family.young=family[family$age<40,]
family.young
family.30y68i=family[(family$age>30) & (family$height<68),]
family.30y68i
family.30y68i=family[family$age>30 & family$height<68,]
bmi=family$weight/(family$height)^2*703
bmi
family2=family
family$bmi=bmi
load("family.rda")
family2$bmi=bmi
abline(v = 1944, col = "grey")
load("C:/Users/Zirui/src/stat133/assignments/hw2/SummerOlympics2012Ctry.Rda")
SO2012Ctry$GDP_per_person=GDP_per_person
symbols(log10(SO2012Ctry$pop),log10(SO2012Ctry$GDP_per_person),circles=SO2012Ctry$Total)
top5=order(SO2012Ctry$Total,decreasing=TRUE)[1:5]
install.packages("maps")
library("maps")
setwd("C:/Users/Zirui/src/stat133/assignments/hw2")
load("WR1500MeterMen.rda")
load("WR1500MeterMen.rda")
names(wr1500m)
head(wr1500m)
nrow(wr1500m)
n.wr=nrow(wr1500m)
wr.name=wr1500m[wr1500m$times==min(wr1500m$times),"athlete"]
wr.name
plot(wr1500m$year,wr1500m$times)
plot(wr1500m$year,wr1500m$times,"l")
plot(wr1500m$year,wr1500m$times,type="l")
times_sec=wr1500m$times+180
wr1500m=c(wr1500m,times_sec)
wr1500m
load("WR1500MeterMen.rda")
wr1500m=data.frame(wr1500m,times_sec)
View(wr1500m)
View(wr1500m)
plot(wr1500$year,wr1500$times_sec,type="s")
plot(wr1500m$year,wr1500m$times_sec,type="s")
?points
plot(c(1,2,3,4),c(1,2,3,4),"l")
points(c(1,1,1,1),c(1.5,2.5,1.5,2.5))
points(c(1,2,3,4),c(1.5,2.5,1.5,2.5))
points(c(1,2,3,4),c(1.5,2.5,1.5,2.5),type="p")
plot(c(1,2,3,4),c(1,2,3,4),"l")
points(c(1,2,3,4),c(1.5,2.5,1.5,2.5),type="p")
plot(c(1,2,3,4),c(1,2,3,4),"l")
points(c(1,2,3,4),c(1.5,2.5,1.5,2.5),pch="0")
points(c(1,2,3,4),c(1.5,2.5,1.5,2.5),pch=".")
points(c(1,2,3,4),c(1.5,2.5,1.5,2.5),pch="?")
points(c(1,2,3,4),c(1.5,2.5,1.5,2.5),pch="Xu Chang")
points(c(1,2,3,4),c(1.5,2.5,1.5,2.5),pch="#")
?text
?order
top5=order(SO2012Ctry$Total,decreasing=TRUE)[1:5]
load("C:/Users/Zirui/src/stat133/assignments/hw2/SummerOlympics2012Ctry.Rda")
top5=order(SO2012Ctry$Total,decreasing=TRUE)[1:5]
Ctry$pop[top5]
SO2012Ctry$pop[top5]
load("C:/Users/Zirui/src/stat133/assignments/hw2/London2012ALL_ATHLETES.rda")
names(athletes)
n.athletes=nrow(athletes)
View(athletes)
women_athletes=athletes[athletes$Sex=="F",]
n.women=length(women_athletes)
frac.women=n.women/n.athletes
View(athletes)
View(women_athletes)
View(athletes)
n.women=nrow(women_athletes)
frac.women=n.women/n.athletes
table(athletes)
View(athletes)
table(athletes$sport)
table(athletes$Sport)
length(athletes$Sport)
length(table(athletes$Sport)
)
n.sports=length(table(athletes$Sport))
women_athletes=subset(athletes,athletes$Sex %in%"F")
n.women=nrow(women_athletes)
frac.women=n.women/n.athletes
table(athletes$Sex,athletes$Sport)
table(athletes$Sport,athletes$Sex)
athTab=table(athletes$Sport,athletes$Sex)
barplot(athTab,beside = TRUE)
barplot(athTab,beside = FALSE)
barplot(athTab,beside = TRUE)
barplot(athTab,beside = FALSE)
athTab2=table(athletes$Sex,athletes$Sport)
barplot(athTab2,beside = TRUE)
orderSport=order(table(athletes$Sport))
# barplot( your code here )
barplot(athTab2[1:2,orderSport],beside=TRUE)
barplot(athTab2[,orderSport],beside=TRUE)
barplot(athTab2[,orderSport],beside=TRUE)
# Q17. Finally to make the plot more informaation rich, try turning
barplot(athTab2[,orderSport],beside=TRUE)
athTab2
athTab2[orderSport,]
athTab2[,orderSport]
athTab2[1:2,orderSport]
athTab2[1:2,orderSport]
orderSport
a=c(3,5,2,346,7,32,5,26,7,42,2,3,6,13,34,43)
length(a)
order(a)
b=order(a,decreasing=True)
b=order(a,decreasing=T)
b
a
d=a[b]
d
ceiling(0.1)
floor(0.1)
ex1.data <- read.csv('ex1-data.csv', header=T)
setwd("C:/Users/Zirui/src/stat133/midterm-review")
ex1.data <- read.csv('ex1-data.csv', header=T)
View(ex1.data)
ex1.data.v <- ex1.data$x
data.class <- class(ex1.data.v)
n.ex1.data <- length(ex1.data.v)
data.mean <- mean(ex1.data.v)
data.mean.trimmed <- mean(ex1.data.v, trim=0.1)
?mean
random.data <- rnorm(100)
data.cor <- cor(ex1.data.v, random.data)
data.cor
load("family.rda")
View(family)
OW_NHANES=family$bmi[(family$gender="m" & family$bmi>26) or (family$gender="f" & family$bmi>25)]
OW_NHANES=family$bmi[(family$gender="m" & family$bmi>26) | (family$gender="f" & family$bmi>25)]
OW_NHANES=family$bmi[(family$gender=="m" & family$bmi>26) | (family$gender=="f" & family$bmi>25)]
OW_NHANES=family[(family$gender=="m" & family$bmi>26) | (family$gender=="f" & family$bmi>25)]
family$bmi>22
OW_NHANES=(family$gender=="m" & family$bmi>26) | (family$gender=="f" & family$bmi>25)
OWval=c(26,25)
as.numberic(family$gender)
as.numeric(family$gender)
OW_limit <- OWval[as.numeric(family$gender)]
OW_limit
plot(family$weight, OW_weight)
# OW_weight <- your code here
OW_weight <- OW_limit * (2.54/100 * family$height)^2 * 2.2
# Make a plot of actual weight against the weight at which they would
# be overweight using the plot function.
# use the abline() function to include a red identity line.
# plot( your code here )
# abline( your code here )
plot(family$weight, OW_weight)
abline(a=0,b=1, col='red')
load("SFHousing.rda")
View(cities)
View(housing)
View(housing)
View(housing)
n.housesale.Berk <- sum(housing$city=="Berkeley")
a=c(T,T,T,T,T,F,F,F)
sum(a)
?quantile
rCols <- rainbow(5, alpha = 0.25)
